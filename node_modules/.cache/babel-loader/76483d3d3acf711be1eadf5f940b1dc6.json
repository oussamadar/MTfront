{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./type\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"../securityUtils/setJwtToken\";\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"https://virementapp.herokuapp.com/api/abonne/login\", LoginRequest); // extract token from res.data\n\n    const {\n      token\n    } = res.data; // store the token in the localStorage\n\n    localStorage.setItem(\"jwtToken\", token); // set our token in header ***\n\n    setJWTToken(token); // decode token on React\n\n    const decoded = jwt_decode(token); // dispatch to our securityReducer\n\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n    window.location.reload();\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};","map":{"version":3,"sources":["C:/Users/admin/Desktop/Virement-master/src/actions/securityActions.js"],"names":["axios","GET_ERRORS","SET_CURRENT_USER","jwt_decode","setJWTToken","login","LoginRequest","dispatch","res","post","token","data","localStorage","setItem","decoded","type","payload","window","location","reload","err","response","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,QAA7C;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,OAAO,MAAMC,KAAK,GAAIC,YAAD,IAAkB,MAAOC,QAAP,IAAoB;AACzD,MAAI;AACF;AACA,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,IAAN,CAChB,oDADgB,EAEhBH,YAFgB,CAAlB,CAFE,CAMF;;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAYF,GAAG,CAACG,IAAtB,CAPE,CASF;;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,KAAjC,EAVE,CAWF;;AACAN,IAAAA,WAAW,CAACM,KAAD,CAAX,CAZE,CAaF;;AACA,UAAMI,OAAO,GAAGX,UAAU,CAACO,KAAD,CAA1B,CAdE,CAeF;;AACAH,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEb,gBADC;AAEPc,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAIAG,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GArBD,CAqBE,OAAOC,GAAP,EAAY;AACZb,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEd,UADC;AAEPe,MAAAA,OAAO,EAAEI,GAAG,CAACC,QAAJ,CAAaV;AAFf,KAAD,CAAR;AAID;AACF,CA5BM;AA8BP,OAAO,MAAMW,MAAM,GAAG,MAAOf,QAAD,IAAc;AACxCK,EAAAA,YAAY,CAACW,UAAb,CAAwB,UAAxB;AACAnB,EAAAA,WAAW,CAAC,KAAD,CAAX;AACAG,EAAAA,QAAQ,CAAC;AACPQ,IAAAA,IAAI,EAAEb,gBADC;AAEPc,IAAAA,OAAO,EAAE;AAFF,GAAD,CAAR;AAID,CAPM","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./type\";\n\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"../securityUtils/setJwtToken\";\n\nexport const login = (LoginRequest) => async (dispatch) => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\n      \"https://virementapp.herokuapp.com/api/abonne/login\",\n      LoginRequest\n    );\n    // extract token from res.data\n    const { token } = res.data;\n\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header ***\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n    window.location.reload();\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {},\n  });\n};\n"]},"metadata":{},"sourceType":"module"}